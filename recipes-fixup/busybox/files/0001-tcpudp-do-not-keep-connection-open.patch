From 18b4e263fc2a5d63d09d8f577331be5f586dcef6 Mon Sep 17 00:00:00 2001
From: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
Date: Wed, 5 Oct 2016 13:22:50 +0200
Subject: [PATCH] tcpudp: do not keep connection open

when the concurrency feature (-c) is used, the 'tcpsvd' parent process
will keep the last connection open until slots are free.

This is unwanted, especially in '-c 1' cases.  It happens because the
flow was:

| again:
| 	while (cnum >= cmax)
| 		wait_for_any_sig(); /* expecting SIGCHLD */
|
|       close(0);
|
|        	xmove_fd(tcp ? conn : sock, 0);
|
| 	pid = vfork();
|
| 	if (pid != 0) {
| 		goto again;


Patch moves the 'close(0)' before the while loop and adjusts code
relying on previous order.


Signed-off-by: Enrico Scholz <enrico.scholz@sigma-chemnitz.de>
---
 networking/tcpudp.c | 9 +++++----
 1 file changed, 5 insertions(+), 4 deletions(-)

diff --git a/networking/tcpudp.c b/networking/tcpudp.c
index fbd1f1c..f4cda04 100644
--- a/networking/tcpudp.c
+++ b/networking/tcpudp.c
@@ -349,12 +349,12 @@ int tcpudpsvd_main(int argc UNUSED_PARAM, char **argv)
  again:
 	hccp = NULL;
 
+	/* Accept a connection to fd #0 */
+	close(0);
+
 	while (cnum >= cmax)
 		wait_for_any_sig(); /* expecting SIGCHLD */
 
-	/* Accept a connection to fd #0 */
- again1:
-	close(0);
  again2:
 	sig_unblock(SIGCHLD);
 	local.len = remote.len = sa_len;
@@ -388,7 +388,8 @@ int tcpudpsvd_main(int argc UNUSED_PARAM, char **argv)
 				/* don't block or test for errors */
 				send(0, msg_per_host, len_per_host, MSG_DONTWAIT);
 			}
-			goto again1;
+			close(0);
+			goto again2;
 		}
 		/* NB: remote_addr is not leaked, it is stored in conn table */
 	}
-- 
2.5.5

